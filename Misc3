-- [ Modules ] --
local UserInterface = loadstring(game:HttpGet("https://raw.githubusercontent.com/icuck/collection-dump/main/AbstractUI", true))()

-- // User Interface \\ --
-- [ Window ] --
local Window = UserInterface.new("V1.2| Moonlight Client (Zombie uprising)", UDim2.new(0, 420, 0, 420))

-- [ Assists ] --
Window:Divider("Gun Stuff")



Window:Toggle("Silent Aim (250FOV", "Shoots toward the nearest zombie to your cursor. (stil click)", false, function(State)
   local zombies = game:GetService("Workspace").Zombies
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService")
local target = false
local RunService = game:GetService("RunService")

getfenv().lock = "Head" -- Head or Hitbox or Random

fov = 250
local fovCircle = true
local st = tonumber(tick())
warn("Loading script...")

if fovCircle then
    function createcircle()
        local a = Drawing.new("Circle")
        a.Transparency = 1
        a.Thickness = 1.5
        a.Visible = true
        a.Color = Color3.fromRGB(0, 255, 149)
        a.Filled = false
        a.Radius = fov
        return a
    end
    local fovc = createcircle()
    spawn(
        function()
            RunService:BindToRenderStep(
                "FovCircle",
                1,
                function()
                    fovc.Position = Vector2.new(mouse.X, mouse.Y)
                end
            )
        end
    )
end

-- function isFfa()
-- local am = #Players:GetChildren();
-- local amm = 0;
-- for i , v in pairs(Players:GetChildren()) do
-- if v.Team == LocalPlayer.Team then
-- amm = amm + 1;
-- end;
-- end;
-- return am == amm;
--end;
function getnearest()
    local nearestmagnitude = math.huge
    local nearestenemy = nil
    local vector = nil
    --local ffa = isFfa();
    for i, v in next, zombies:GetChildren() do
        if v and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local vector, onScreen = Camera:WorldToScreenPoint(v["HumanoidRootPart"].Position)
            if onScreen then
                local ray = Ray.new(Camera.CFrame.p, (v["Head"].Position - Camera.CFrame.p).unit * 500)
                local ignore = {
                    LocalPlayer.Character
                }
                local hit, position, normal = workspace:FindPartOnRayWithIgnoreList(ray, ignore)
                if
                    hit and hit:FindFirstAncestorOfClass("Model") and
                        zombies:FindFirstChild(hit:FindFirstAncestorOfClass("Model").Name)
                 then
                    local magnitude = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                    if magnitude < nearestmagnitude and magnitude <= fov then
                        nearestenemy = v
                        nearestmagnitude = magnitude
                    end
                end
            end
        end
    end
    return nearestenemy
end

local meta = getrawmetatable(game)
setreadonly(meta, false)
local oldNamecall = meta.__namecall
meta.__namecall =
    newcclosure(
    function(...)
        local method = getnamecallmethod()
        local args = {...}
        if string.find(method, "Ray") then
            if target then
                if args[1].Name ~= "Workspace" then
                    print(args[1])
                end
                args[2] =
                    Ray.new(
                    workspace.CurrentCamera.CFrame.Position,
                    (target.Position +
                        Vector3.new(0, (workspace.CurrentCamera.CFrame.Position - target.Position).Magnitude / 500, 0) -
                        workspace.CurrentCamera.CFrame.Position).unit * 5000
                )
            end
        end
        return oldNamecall(unpack(args))
    end
)

warn("Script loaded!\nTime taken: " .. math.abs(tonumber(tick()) - st))
RunService:BindToRenderStep(
    "SilentAim",
    1,
    function()
        if
            UserInputService:IsMouseButtonPressed(0) and Players.LocalPlayer.Character and
                Players.LocalPlayer.Character:FindFirstChild("Humanoid") and
                Players.LocalPlayer.Character.Humanoid.Health > 0
         then
            local enemy = getnearest()
            if enemy and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                local vector, onScreen = Camera:WorldToScreenPoint(enemy["Head"].Position)
                local head = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                local vector, onScreen = Camera:WorldToScreenPoint(enemy["HumanoidRootPart"].Position)
                local hitbox = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                if head <= hitbox then
                    magnitude = head
                else
                    magnitude = hitbox
                end
                if getfenv().lock == "Head" then
                    target = workspace.Zombies[enemy.Name]["Head"]
                else
                    if getfenv().lock == "Random" then
                        if magnitude == hitbox then
                            target = zombies[enemy.Name]["HumanoidRootPart"]
                        else
                            target = zombies[enemy.Name]["Head"]
                        end
                    else
                        target = zombies[enemy.Name]["HumanoidRootPart"]
                    end
                end
            else
                target = nil
            end
        end
    end
)

end)

Window:Toggle("Silent Aim (500FOV)", "Shoots toward the nearest zombie to your cursor. (stil click)", false, function(State)
   local zombies = game:GetService("Workspace").Zombies
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService")
local target = false
local RunService = game:GetService("RunService")

getfenv().lock = "Head" -- Head or Hitbox or Random

fov = 500
local fovCircle = true
local st = tonumber(tick())
warn("Loading script...")

if fovCircle then
    function createcircle()
        local a = Drawing.new("Circle")
        a.Transparency = 1
        a.Thickness = 1.5
        a.Visible = true
        a.Color = Color3.fromRGB(0, 255, 149)
        a.Filled = false
        a.Radius = fov
        return a
    end
    local fovc = createcircle()
    spawn(
        function()
            RunService:BindToRenderStep(
                "FovCircle",
                1,
                function()
                    fovc.Position = Vector2.new(mouse.X, mouse.Y)
                end
            )
        end
    )
end

-- function isFfa()
-- local am = #Players:GetChildren();
-- local amm = 0;
-- for i , v in pairs(Players:GetChildren()) do
-- if v.Team == LocalPlayer.Team then
-- amm = amm + 1;
-- end;
-- end;
-- return am == amm;
--end;
function getnearest()
    local nearestmagnitude = math.huge
    local nearestenemy = nil
    local vector = nil
    --local ffa = isFfa();
    for i, v in next, zombies:GetChildren() do
        if v and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local vector, onScreen = Camera:WorldToScreenPoint(v["HumanoidRootPart"].Position)
            if onScreen then
                local ray = Ray.new(Camera.CFrame.p, (v["Head"].Position - Camera.CFrame.p).unit * 500)
                local ignore = {
                    LocalPlayer.Character
                }
                local hit, position, normal = workspace:FindPartOnRayWithIgnoreList(ray, ignore)
                if
                    hit and hit:FindFirstAncestorOfClass("Model") and
                        zombies:FindFirstChild(hit:FindFirstAncestorOfClass("Model").Name)
                 then
                    local magnitude = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                    if magnitude < nearestmagnitude and magnitude <= fov then
                        nearestenemy = v
                        nearestmagnitude = magnitude
                    end
                end
            end
        end
    end
    return nearestenemy
end

local meta = getrawmetatable(game)
setreadonly(meta, false)
local oldNamecall = meta.__namecall
meta.__namecall =
    newcclosure(
    function(...)
        local method = getnamecallmethod()
        local args = {...}
        if string.find(method, "Ray") then
            if target then
                if args[1].Name ~= "Workspace" then
                    print(args[1])
                end
                args[2] =
                    Ray.new(
                    workspace.CurrentCamera.CFrame.Position,
                    (target.Position +
                        Vector3.new(0, (workspace.CurrentCamera.CFrame.Position - target.Position).Magnitude / 500, 0) -
                        workspace.CurrentCamera.CFrame.Position).unit * 5000
                )
            end
        end
        return oldNamecall(unpack(args))
    end
)

warn("Script loaded!\nTime taken: " .. math.abs(tonumber(tick()) - st))
RunService:BindToRenderStep(
    "SilentAim",
    1,
    function()
        if
            UserInputService:IsMouseButtonPressed(0) and Players.LocalPlayer.Character and
                Players.LocalPlayer.Character:FindFirstChild("Humanoid") and
                Players.LocalPlayer.Character.Humanoid.Health > 0
         then
            local enemy = getnearest()
            if enemy and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                local vector, onScreen = Camera:WorldToScreenPoint(enemy["Head"].Position)
                local head = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                local vector, onScreen = Camera:WorldToScreenPoint(enemy["HumanoidRootPart"].Position)
                local hitbox = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                if head <= hitbox then
                    magnitude = head
                else
                    magnitude = hitbox
                end
                if getfenv().lock == "Head" then
                    target = workspace.Zombies[enemy.Name]["Head"]
                else
                    if getfenv().lock == "Random" then
                        if magnitude == hitbox then
                            target = zombies[enemy.Name]["HumanoidRootPart"]
                        else
                            target = zombies[enemy.Name]["Head"]
                        end
                    else
                        target = zombies[enemy.Name]["HumanoidRootPart"]
                    end
                end
            else
                target = nil
            end
        end
    end
)

end)

Window:Toggle("Silent Aim (750FOV)", "Shoots toward the nearest zombie to your cursor. (stil click)", false, function(State)
   local zombies = game:GetService("Workspace").Zombies
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService")
local target = false
local RunService = game:GetService("RunService")

getfenv().lock = "Head" -- Head or Hitbox or Random

fov = 750
local fovCircle = true
local st = tonumber(tick())
warn("Loading script...")

if fovCircle then
    function createcircle()
        local a = Drawing.new("Circle")
        a.Transparency = 1
        a.Thickness = 1.5
        a.Visible = true
        a.Color = Color3.fromRGB(0, 255, 149)
        a.Filled = false
        a.Radius = fov
        return a
    end
    local fovc = createcircle()
    spawn(
        function()
            RunService:BindToRenderStep(
                "FovCircle",
                1,
                function()
                    fovc.Position = Vector2.new(mouse.X, mouse.Y)
                end
            )
        end
    )
end

-- function isFfa()
-- local am = #Players:GetChildren();
-- local amm = 0;
-- for i , v in pairs(Players:GetChildren()) do
-- if v.Team == LocalPlayer.Team then
-- amm = amm + 1;
-- end;
-- end;
-- return am == amm;
--end;
function getnearest()
    local nearestmagnitude = math.huge
    local nearestenemy = nil
    local vector = nil
    --local ffa = isFfa();
    for i, v in next, zombies:GetChildren() do
        if v and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local vector, onScreen = Camera:WorldToScreenPoint(v["HumanoidRootPart"].Position)
            if onScreen then
                local ray = Ray.new(Camera.CFrame.p, (v["Head"].Position - Camera.CFrame.p).unit * 500)
                local ignore = {
                    LocalPlayer.Character
                }
                local hit, position, normal = workspace:FindPartOnRayWithIgnoreList(ray, ignore)
                if
                    hit and hit:FindFirstAncestorOfClass("Model") and
                        zombies:FindFirstChild(hit:FindFirstAncestorOfClass("Model").Name)
                 then
                    local magnitude = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                    if magnitude < nearestmagnitude and magnitude <= fov then
                        nearestenemy = v
                        nearestmagnitude = magnitude
                    end
                end
            end
        end
    end
    return nearestenemy
end

local meta = getrawmetatable(game)
setreadonly(meta, false)
local oldNamecall = meta.__namecall
meta.__namecall =
    newcclosure(
    function(...)
        local method = getnamecallmethod()
        local args = {...}
        if string.find(method, "Ray") then
            if target then
                if args[1].Name ~= "Workspace" then
                    print(args[1])
                end
                args[2] =
                    Ray.new(
                    workspace.CurrentCamera.CFrame.Position,
                    (target.Position +
                        Vector3.new(0, (workspace.CurrentCamera.CFrame.Position - target.Position).Magnitude / 500, 0) -
                        workspace.CurrentCamera.CFrame.Position).unit * 5000
                )
            end
        end
        return oldNamecall(unpack(args))
    end
)

warn("Script loaded!\nTime taken: " .. math.abs(tonumber(tick()) - st))
RunService:BindToRenderStep(
    "SilentAim",
    1,
    function()
        if
            UserInputService:IsMouseButtonPressed(0) and Players.LocalPlayer.Character and
                Players.LocalPlayer.Character:FindFirstChild("Humanoid") and
                Players.LocalPlayer.Character.Humanoid.Health > 0
         then
            local enemy = getnearest()
            if enemy and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                local vector, onScreen = Camera:WorldToScreenPoint(enemy["Head"].Position)
                local head = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                local vector, onScreen = Camera:WorldToScreenPoint(enemy["HumanoidRootPart"].Position)
                local hitbox = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).magnitude
                if head <= hitbox then
                    magnitude = head
                else
                    magnitude = hitbox
                end
                if getfenv().lock == "Head" then
                    target = workspace.Zombies[enemy.Name]["Head"]
                else
                    if getfenv().lock == "Random" then
                        if magnitude == hitbox then
                            target = zombies[enemy.Name]["HumanoidRootPart"]
                        else
                            target = zombies[enemy.Name]["Head"]
                        end
                    else
                        target = zombies[enemy.Name]["HumanoidRootPart"]
                    end
                end
            else
                target = nil
            end
        end
    end
)

end)

Window:Button("Gun mods", "Improve your gun.", function()
   local spread1 = {
  Increase = 0,
  Decrease = 0,
  Max = 0,
  Min = 0
}
local rec = {
  Tilt = { 0, 0 },
  Side = { 0, 0 },
  Vertical = { 0, 0 },
  Back = { 0, 0 },
  Aimed = 0,
  FirstShot = 0
}
for i,v in pairs(getgc(true)) do
   if type(v) == 'table' and rawget(v, 'magsize') then
       v.magsize = math.huge
       v.storedammo = math.huge
       v.rpm = math.huge
       v.spread = spread1
       v.recoil = rec
       v.mode = "Auto"
   end
end
end)


Window:Toggle("Zombie esp", "See zombies trough wall", false, function(State)
   --:// OPEN SOURCE \\:--
--:// OPEN SOURCE \\:--
--:// OPEN SOURCE \\:--
--:// OPEN SOURCE \\:--

--:// MADE BY THENUBREAL (ANTHONY) \\:--

local Map_ = game:GetService("Workspace").Map

local zombies = game:GetService("Workspace").Zombies
local perkMachines = Map_.PerkMachines
local turrets = Map_.Turrets

local debris = game:GetService("Debris")
local StarterGui = game:GetService("StarterGui")

local function createEsp(Name,Text)
	local ESP = Instance.new("BillboardGui")
	local TextLabel = Instance.new("TextLabel")
    local Stroke = Instance.new("UIStroke")

	ESP.Name = "[ESP]"
	ESP.Parent = Name
	ESP.AlwaysOnTop = true
	ESP.Size = UDim2.new(3, 0, 1.5, 0)
	ESP.StudsOffset = Vector3.new(0.5, 2, 0)

	TextLabel.Parent = ESP
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Position = UDim2.new(-0.170000002, -20, -0, 0)
	TextLabel.Size = UDim2.new(1, 40, 0.899999976, -1)
	TextLabel.Font = Enum.Font.Unknown
	TextLabel.Text = tostring(Text)
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 12.000
	TextLabel.TextStrokeColor3 = Color3.fromRGB(51, 51, 51)
	TextLabel.TextStrokeTransparency = 0.500
	TextLabel.TextWrapped = true
	TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom

    Stroke.Parent = TextLabel
    Stroke.Thickness = 1.5
end

local function notification(title,txt)
    StarterGui:SetCore("SendNotification", {
		Title = title;
		Text = txt;
	})
end

Map_:GetPropertyChangedSignal("Name"):Connect(function()
    if game.Workspace:FindFirstChild("OldMap") then
        repeat
            wait()
        until game.Workspace:FindFirstChild("Map")

        if game.Workspace:FindFirstChild("Map") then
            wait(1)
            Map_ = game.Workspace:FindFirstChild("Map")

            repeat
                wait()
            until Map_:FindFirstChild("PerkMachines")

            repeat
                wait()
            until Map_:FindFirstChild("Turrets")

            wait(2)
            
            for i,v in pairs(Map_.PerkMachines:GetDescendants()) do
                if v:FindFirstChild("Glass") then
                    createEsp(v.Glass, tostring(v.Name))
                end
            end
            for i,v in pairs(Map_.Turrets:GetDescendants()) do
                if v:FindFirstChild("Activated") and v:FindFirstChild("Emitter") then
                    createEsp(v.Emitter, tostring(v.Name))
            
                    if v.Activated.Value == false then
                        v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                        if v.Name == "Auto" then
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [OFF]"
                        else
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
                        end
                    end
                    if v.Activated.Value == true then
                        v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
                        if v.Name == "Auto" then
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [ON]"
                        else
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
                        end
                        if v.Name == "Auto" then
                            notification("Active Gun","a Machine gun is active")
                        else
                            notification("Active Gun",v.Name.." is active")
                        end
                    end
            
                    v.Activated:GetPropertyChangedSignal("Value"):Connect(function()
                        if v.Activated.Value == true then
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
                            if v.Name == "Auto" then
                                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [ON]"
                            else
                                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
                            end
                            if v.Name == "Auto" then
                                notification("Active Gun","A Machine gun has been activated")
                            else
                                notification("Active Gun","A "..v.Name.." has been activated")
                            end
                        elseif v.Activated.Value == false then
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                            if v.Name == "Auto" then
                                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [OFF]"
                            else
                                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
                            end
                            if v.Name == "Auto" then
                                notification("Unactive Gun","A Machine gun has been de-activated")
                            else
                                notification("Unactive Gun","A "..v.Name.." has been de-activated")
                            end
                        end
                    end)
                end
            end
            notification("Moonlight client","ESP Has been reloaded for the new map!")
        end
    end
end)

zombies.ChildAdded:Connect(function(child)
    if child:FindFirstChild("Head") and child:FindFirstChild("ZombieName") then
        createEsp(child.Head, tostring(child.ZombieName.Value))

        if child:FindFirstChild("Humanoid") then
            child.Humanoid.HealthChanged:Connect(function()
                if child.Humanoid.Health <= 0 then
                    child.Head:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                    child.Head:FindFirstChild("[ESP]").TextLabel.Text = child.ZombieName.Value.." [DEAD]"
                 end
            end)
         end
    end 
end)

perkMachines.ChildAdded:Connect(function(child)
    if child:IsA("Model") and child:FindFirstChild("Glass")  then
        createEsp(child.Glass, tostring(child.Name))
    end 
end)

turrets.ChildAdded:Connect(function(child)
    if child:FindFirstChild("Emitter") then
        createEsp(child.Emitter, tostring(child.Name))
        if child:FindFirstChild("Activated") then
            child.Activated:GetPropertyChangedSignal("Value"):Connect(function()
                if child.Activated.Value == true then
                    child.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
                    child.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
                elseif child.Activated.Value == false then
                    child.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                    child.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
                end
            end)
        end
    end 
end)

for i,v in pairs(zombies:GetDescendants()) do
    if v:FindFirstChild("Head") and v:FindFirstChild("ZombieName") then
        createEsp(v.Head, tostring(v.ZombieName.Value))
        if v:FindFirstChild("Humanoid") then
            v.Humanoid.HealthChanged:Connect(function()
                if v.Humanoid.Health <= 0 then
                    v.Head:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                    v.Head:FindFirstChild("[ESP]").TextLabel.Text = v.ZombieName.Value.." [DEAD]"
                 end
            end)
         end
    end
end

for i,v in pairs(perkMachines:GetDescendants()) do
    if v:FindFirstChild("Glass") then
        createEsp(v.Glass, tostring(v.Name))
    end
end

for i,v in pairs(turrets:GetDescendants()) do
    if v:FindFirstChild("Activated") and v:FindFirstChild("Emitter") then
        createEsp(v.Emitter, tostring(v.Name))

        if v.Activated.Value == false then
            v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
            if v.Name == "Auto" then
                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [OFF]"
            else
                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
            end
        end
        if v.Activated.Value == true then
            v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
            if v.Name == "Auto" then
                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [ON]"
            else
                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
            end
            if v.Name == "Auto" then
                notification("Active Gun","a Machine gun is active")
            else
                notification("Active Gun","a"..v.Name.." is active")
            end
        end

        v.Activated:GetPropertyChangedSignal("Value"):Connect(function()
            if v.Activated.Value == true then
                v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
                if v.Name == "Auto" then
                    v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [ON]"
                else
                    v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
                end
                if v.Name == "Auto" then
                    notification("Active Gun","A Machine gun has been activated")
                else
                    notification("Active Gun","A "..v.Name.." has been activated")
                end
            elseif v.Activated.Value == false then
                v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                if v.Name == "Auto" then
                    v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [OFF]"
                else
                    v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
                end
                if v.Name == "Auto" then
                    notification("Unactive Gun","A Machine gun has been de-activated")
                else
                    notification("Unactive Gun","A "..v.Name.." has been de-activated")
                end
            end
        end)
    end
end

notification("[ESP]","ESP has loaded!")
end)




Window:Divider("LocalPlayer")

Window:Slider("Walkspeed", "Change your walk speed (Glitchy)", 16, 500, 16, function(Value)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)

Window:Slider("JumpPower", "Change your JumpPower. (Glitchy)", 50, 750, 50, function(Value)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)

Window:Slider("Gravity", "Change your Gravity. (Glitchy)", 0, 169, 169, function(Value)
   game.Workspace.Gravity = Value
end)

Window:Slider("HipHeight", "Change your HipHeight. (COULD GLITCH YOU OUT)", 0, 25, 0, function(Value)
   game.Players.LocalPlayer.Character.Humanoid.HipHeight = Value
end)

Window:Button("SpaceMode ON", "Makes your gravity lower", function()
   game.Workspace.Gravity = 68
end)

Window:Button("SpaceMode OFF", "Resets your gravity", function()
   game.Workspace.Gravity = 169
end)




-- [ Random Things ] --
Window:Divider("Random Things")

Window:Button("Infinite yield", "Launches an admin script", function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

-- [ Credits ] --
Window:Divider("Credits")

Window:Button("OminousVibes#7259", "Script Creator", function()
   setclipboard("OminousVibes#7259")
end)

Window:Button("JustOrchi#1812", "Script Editor", function()
   setclipboard("JustOrchi#1812")
end)

Window:Button("Logs", "Improved silent aim./ New Version. / Bug Fixes.", function()
   print ("logs")
end)



Window:Toggle("Zombie esp", "See zombies trough wall", false, function(State)
   --:// OPEN SOURCE \\:--
--:// OPEN SOURCE \\:--
--:// OPEN SOURCE \\:--
--:// OPEN SOURCE \\:--

--:// MADE BY THENUBREAL (ANTHONY) \\:--

local Map_ = game:GetService("Workspace").Map

local zombies = game:GetService("Workspace").Zombies
local perkMachines = Map_.PerkMachines
local turrets = Map_.Turrets

local debris = game:GetService("Debris")
local StarterGui = game:GetService("StarterGui")

local function createEsp(Name,Text)
	local ESP = Instance.new("BillboardGui")
	local TextLabel = Instance.new("TextLabel")
    local Stroke = Instance.new("UIStroke")

	ESP.Name = "[ESP]"
	ESP.Parent = Name
	ESP.AlwaysOnTop = true
	ESP.Size = UDim2.new(3, 0, 1.5, 0)
	ESP.StudsOffset = Vector3.new(0.5, 2, 0)

	TextLabel.Parent = ESP
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Position = UDim2.new(-0.170000002, -20, -0, 0)
	TextLabel.Size = UDim2.new(1, 40, 0.899999976, -1)
	TextLabel.Font = Enum.Font.Unknown
	TextLabel.Text = tostring(Text)
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 12.000
	TextLabel.TextStrokeColor3 = Color3.fromRGB(51, 51, 51)
	TextLabel.TextStrokeTransparency = 0.500
	TextLabel.TextWrapped = true
	TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom

    Stroke.Parent = TextLabel
    Stroke.Thickness = 1.5
end

local function notification(title,txt)
    StarterGui:SetCore("SendNotification", {
		Title = title;
		Text = txt;
	})
end

Map_:GetPropertyChangedSignal("Name"):Connect(function()
    if game.Workspace:FindFirstChild("OldMap") then
        repeat
            wait()
        until game.Workspace:FindFirstChild("Map")

        if game.Workspace:FindFirstChild("Map") then
            wait(1)
            Map_ = game.Workspace:FindFirstChild("Map")

            repeat
                wait()
            until Map_:FindFirstChild("PerkMachines")

            repeat
                wait()
            until Map_:FindFirstChild("Turrets")

            wait(2)
            
            for i,v in pairs(Map_.PerkMachines:GetDescendants()) do
                if v:FindFirstChild("Glass") then
                    createEsp(v.Glass, tostring(v.Name))
                end
            end
            for i,v in pairs(Map_.Turrets:GetDescendants()) do
                if v:FindFirstChild("Activated") and v:FindFirstChild("Emitter") then
                    createEsp(v.Emitter, tostring(v.Name))
            
                    if v.Activated.Value == false then
                        v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                        if v.Name == "Auto" then
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [OFF]"
                        else
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
                        end
                    end
                    if v.Activated.Value == true then
                        v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
                        if v.Name == "Auto" then
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [ON]"
                        else
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
                        end
                        if v.Name == "Auto" then
                            notification("Active Gun","a Machine gun is active")
                        else
                            notification("Active Gun",v.Name.." is active")
                        end
                    end
            
                    v.Activated:GetPropertyChangedSignal("Value"):Connect(function()
                        if v.Activated.Value == true then
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
                            if v.Name == "Auto" then
                                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [ON]"
                            else
                                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
                            end
                            if v.Name == "Auto" then
                                notification("Active Gun","A Machine gun has been activated")
                            else
                                notification("Active Gun","A "..v.Name.." has been activated")
                            end
                        elseif v.Activated.Value == false then
                            v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                            if v.Name == "Auto" then
                                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [OFF]"
                            else
                                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
                            end
                            if v.Name == "Auto" then
                                notification("Unactive Gun","A Machine gun has been de-activated")
                            else
                                notification("Unactive Gun","A "..v.Name.." has been de-activated")
                            end
                        end
                    end)
                end
            end
            notification("Moonlight client","ESP Has been reloaded for the new map!")
        end
    end
end)

zombies.ChildAdded:Connect(function(child)
    if child:FindFirstChild("Head") and child:FindFirstChild("ZombieName") then
        createEsp(child.Head, tostring(child.ZombieName.Value))

        if child:FindFirstChild("Humanoid") then
            child.Humanoid.HealthChanged:Connect(function()
                if child.Humanoid.Health <= 0 then
                    child.Head:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                    child.Head:FindFirstChild("[ESP]").TextLabel.Text = child.ZombieName.Value.." [DEAD]"
                 end
            end)
         end
    end 
end)

perkMachines.ChildAdded:Connect(function(child)
    if child:IsA("Model") and child:FindFirstChild("Glass")  then
        createEsp(child.Glass, tostring(child.Name))
    end 
end)

turrets.ChildAdded:Connect(function(child)
    if child:FindFirstChild("Emitter") then
        createEsp(child.Emitter, tostring(child.Name))
        if child:FindFirstChild("Activated") then
            child.Activated:GetPropertyChangedSignal("Value"):Connect(function()
                if child.Activated.Value == true then
                    child.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
                    child.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
                elseif child.Activated.Value == false then
                    child.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                    child.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
                end
            end)
        end
    end 
end)

for i,v in pairs(zombies:GetDescendants()) do
    if v:FindFirstChild("Head") and v:FindFirstChild("ZombieName") then
        createEsp(v.Head, tostring(v.ZombieName.Value))
        if v:FindFirstChild("Humanoid") then
            v.Humanoid.HealthChanged:Connect(function()
                if v.Humanoid.Health <= 0 then
                    v.Head:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                    v.Head:FindFirstChild("[ESP]").TextLabel.Text = v.ZombieName.Value.." [DEAD]"
                 end
            end)
         end
    end
end

for i,v in pairs(perkMachines:GetDescendants()) do
    if v:FindFirstChild("Glass") then
        createEsp(v.Glass, tostring(v.Name))
    end
end

for i,v in pairs(turrets:GetDescendants()) do
    if v:FindFirstChild("Activated") and v:FindFirstChild("Emitter") then
        createEsp(v.Emitter, tostring(v.Name))

        if v.Activated.Value == false then
            v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
            if v.Name == "Auto" then
                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [OFF]"
            else
                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
            end
        end
        if v.Activated.Value == true then
            v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
            if v.Name == "Auto" then
                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [ON]"
            else
                v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
            end
            if v.Name == "Auto" then
                notification("Active Gun","a Machine gun is active")
            else
                notification("Active Gun","a"..v.Name.." is active")
            end
        end

        v.Activated:GetPropertyChangedSignal("Value"):Connect(function()
            if v.Activated.Value == true then
                v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(0,255,0)
                if v.Name == "Auto" then
                    v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [ON]"
                else
                    v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [ON]"
                end
                if v.Name == "Auto" then
                    notification("Active Gun","A Machine gun has been activated")
                else
                    notification("Active Gun","A "..v.Name.." has been activated")
                end
            elseif v.Activated.Value == false then
                v.Emitter:FindFirstChild("[ESP]").TextLabel.TextColor3 = Color3.new(255,0,0)
                if v.Name == "Auto" then
                    v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = "Machine Gun [OFF]"
                else
                    v.Emitter:FindFirstChild("[ESP]").TextLabel.Text = v.Name.." [OFF]"
                end
                if v.Name == "Auto" then
                    notification("Unactive Gun","A Machine gun has been de-activated")
                else
                    notification("Unactive Gun","A "..v.Name.." has been de-activated")
                end
            end
        end)
    end
end

notification("[ESP]","ESP has loaded!")
end)




Window:Divider("LocalPlayer")

Window:Slider("Walkspeed", "Change your walk speed (Glitchy)", 16, 500, 16, function(Value)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)

Window:Slider("JumpPower", "Change your JumpPower. (Glitchy)", 50, 750, 50, function(Value)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)

Window:Slider("Gravity", "Change your Gravity. (Glitchy)", 0, 169, 169, function(Value)
   game.Workspace.Gravity = Value
end)

Window:Slider("HipHeight", "Change your HipHeight. (COULD GLITCH YOU OUT)", 0, 25, 0, function(Value)
   game.Players.LocalPlayer.Character.Humanoid.HipHeight = Value
end)

Window:Button("SpaceMode ON", "Makes your gravity lower", function()
   game.Workspace.Gravity = 68
end)

Window:Button("SpaceMode OFF", "Resets your gravity", function()
   game.Workspace.Gravity = 169
end)




-- [ Random Things ] --
Window:Divider("Random Things")

Window:Button("Infinite yield", "Launches an admin script", function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

-- [ Credits ] --
Window:Divider("Credits")

Window:Button("JustOrchi#1812", "Script Creator", function()
   setclipboard("JustOrchi#1812")
end)

Window:Button("Logs", "Improved silent aim./ New Version. / Bug Fixes.", function()
   print ("logs")
end)

